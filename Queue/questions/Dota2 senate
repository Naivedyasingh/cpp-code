#include <iostream>
#include <string>
#include <queue>

using namespace std;

class Solution {
public:
    string predictPartyVictory(string senate) {
        queue<int> radiant, dire;
        int n = senate.size();

        // Enqueue the indices of each senator
        for (int i = 0; i < n; ++i) {
            if (senate[i] == 'R') radiant.push(i);
            else dire.push(i);
        }

        while (!radiant.empty() && !dire.empty()) {
            int r_index = radiant.front();
            int d_index = dire.front();
            radiant.pop();
            dire.pop();
            
            if (r_index < d_index) {
                // Radiant bans Dire senator and re-enqueues with new index
                radiant.push(r_index + n);
            } else {
                // Dire bans Radiant senator and re-enqueues with new index
                dire.push(d_index + n);
            }
        }

        // Determine the winner based on which queue is not empty
        return radiant.empty() ? "Dire" : "Radiant";
    }
};
